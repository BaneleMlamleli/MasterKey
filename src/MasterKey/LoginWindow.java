/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MasterKey;

/**
 *
 * @author Shaun
 */
import java.awt.*;
import java.sql.*;
import javax.swing.*;

public class LoginWindow extends javax.swing.JFrame {

    //defining global variables
    Connection connect = null;
    ResultSet result = null;
    Statement stmnt = null;
    PreparedStatement prepStmnt = null;
    EncryptDecrypt objEncryptDecrypt = new EncryptDecrypt(); //creating an object of the class EncryptDecrypt

    /**
     * Creates new form LoginWindow
     */
    public LoginWindow() {
        initComponents();

        try {
            /*
                The below code will load the ucanaccess drivers, jar files and connect to the database.
                It will also check the database in the specified directory
             */
            connect = DriverManager.getConnection("jdbc:ucanaccess://H:\\Cipher\\PROGRAMMING\\Java\\Projects\\MasterKey\\src\\MasterKey.accdb");
            System.out.println("Driver successfully loaded in the Login GUI");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Unable to load database driver\n" + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jMenuItem3 = new javax.swing.JMenuItem();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        logo = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtMasterKey = new javax.swing.JPasswordField();
        btnLogin = new javax.swing.JLabel();
        btnClearAllFields1 = new javax.swing.JButton();
        backGround1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        btnRegister = new javax.swing.JLabel();
        txtRegUsername = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtRegMasterKey = new javax.swing.JPasswordField();
        jLabel17 = new javax.swing.JLabel();
        txtRegConfirmMasterKey = new javax.swing.JPasswordField();
        btnClearAllFields = new javax.swing.JButton();
        backGround4 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MasterKey/background.png"))); // NOI18N
        jLabel1.setText("jLabel1");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jLabel8.setText("jLabel8");

        jLabel9.setText("jLabel9");

        jMenuItem3.setText("jMenuItem3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Master Key");
        setMinimumSize(new java.awt.Dimension(500, 500));
        setResizable(false);

        jTabbedPane1.setMinimumSize(new java.awt.Dimension(539, 465));

        jPanel2.setLayout(null);

        jLabel4.setFont(new java.awt.Font("Comic Sans MS", 1, 20)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 153, 153));
        jLabel4.setText("Username");
        jPanel2.add(jLabel4);
        jLabel4.setBounds(19, 109, 136, 28);

        logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MasterKey/logo_SimpleText_1.png"))); // NOI18N
        jPanel2.add(logo);
        logo.setBounds(42, 20, 370, 42);

        txtUsername.setFont(new java.awt.Font("Comic Sans MS", 0, 11)); // NOI18N
        txtUsername.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtUsername.setToolTipText("Enter username");
        txtUsername.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        txtUsername.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtUsername.setMargin(new java.awt.Insets(6, 6, 6, 6));
        jPanel2.add(txtUsername);
        txtUsername.setBounds(249, 108, 261, 37);

        jLabel3.setFont(new java.awt.Font("Comic Sans MS", 1, 20)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 153, 153));
        jLabel3.setText("Master Key");
        jPanel2.add(jLabel3);
        jLabel3.setBounds(19, 152, 172, 28);

        txtMasterKey.setFont(new java.awt.Font("Comic Sans MS", 0, 11)); // NOI18N
        txtMasterKey.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtMasterKey.setToolTipText("Enter Unique Mater Key");
        txtMasterKey.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        txtMasterKey.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtMasterKey.setMargin(new java.awt.Insets(6, 6, 6, 6));
        jPanel2.add(txtMasterKey);
        txtMasterKey.setBounds(249, 151, 261, 37);

        btnLogin.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        btnLogin.setForeground(new java.awt.Color(0, 153, 153));
        btnLogin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MasterKey/login.png"))); // NOI18N
        btnLogin.setToolTipText("click to login");
        btnLogin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnLoginMouseClicked(evt);
            }
        });
        jPanel2.add(btnLogin);
        btnLogin.setBounds(90, 270, 330, 90);

        btnClearAllFields1.setBackground(new java.awt.Color(204, 255, 255));
        btnClearAllFields1.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        btnClearAllFields1.setForeground(new java.awt.Color(0, 153, 153));
        btnClearAllFields1.setText("CLEAR ALL FIELDS");
        btnClearAllFields1.setToolTipText("clear all the input fields");
        btnClearAllFields1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        btnClearAllFields1.setBorderPainted(false);
        btnClearAllFields1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnClearAllFields1MouseClicked(evt);
            }
        });
        btnClearAllFields1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearAllFields1ActionPerformed(evt);
            }
        });
        jPanel2.add(btnClearAllFields1);
        btnClearAllFields1.setBounds(170, 370, 180, 30);

        backGround1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        backGround1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MasterKey/background.png"))); // NOI18N
        backGround1.setText("backGround");
        backGround1.setMinimumSize(new java.awt.Dimension(539, 400));
        jPanel2.add(backGround1);
        backGround1.setBounds(0, -1, 540, 420);

        jTabbedPane1.addTab("LOGIN", jPanel2);

        jPanel4.setLayout(null);

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MasterKey/logo_SimpleText_1.png"))); // NOI18N
        jPanel4.add(jLabel14);
        jLabel14.setBounds(42, 20, 370, 42);

        jLabel18.setFont(new java.awt.Font("Comic Sans MS", 1, 20)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(0, 153, 153));
        jLabel18.setText("Username");
        jPanel4.add(jLabel18);
        jLabel18.setBounds(19, 109, 136, 28);

        btnRegister.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        btnRegister.setForeground(new java.awt.Color(0, 153, 153));
        btnRegister.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MasterKey/register.png"))); // NOI18N
        btnRegister.setToolTipText("click to register as new user");
        btnRegister.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRegisterMouseClicked(evt);
            }
        });
        jPanel4.add(btnRegister);
        btnRegister.setBounds(90, 270, 330, 90);

        txtRegUsername.setFont(new java.awt.Font("Comic Sans MS", 0, 11)); // NOI18N
        txtRegUsername.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtRegUsername.setToolTipText("Enter username");
        txtRegUsername.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        txtRegUsername.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtRegUsername.setMargin(new java.awt.Insets(6, 6, 6, 6));
        jPanel4.add(txtRegUsername);
        txtRegUsername.setBounds(249, 108, 261, 37);

        jLabel16.setFont(new java.awt.Font("Comic Sans MS", 1, 20)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 153, 153));
        jLabel16.setText("Master Key");
        jPanel4.add(jLabel16);
        jLabel16.setBounds(19, 152, 172, 28);

        txtRegMasterKey.setFont(new java.awt.Font("Comic Sans MS", 0, 11)); // NOI18N
        txtRegMasterKey.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtRegMasterKey.setToolTipText("Enter Unique Mater Key");
        txtRegMasterKey.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        txtRegMasterKey.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtRegMasterKey.setMargin(new java.awt.Insets(6, 6, 6, 6));
        jPanel4.add(txtRegMasterKey);
        txtRegMasterKey.setBounds(249, 151, 261, 37);

        jLabel17.setFont(new java.awt.Font("Comic Sans MS", 1, 20)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 153, 153));
        jLabel17.setText("Confirm Master Key");
        jPanel4.add(jLabel17);
        jLabel17.setBounds(19, 195, 212, 28);

        txtRegConfirmMasterKey.setFont(new java.awt.Font("Comic Sans MS", 0, 11)); // NOI18N
        txtRegConfirmMasterKey.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtRegConfirmMasterKey.setToolTipText("Re-enter Master Key");
        txtRegConfirmMasterKey.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        txtRegConfirmMasterKey.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtRegConfirmMasterKey.setMargin(new java.awt.Insets(6, 6, 6, 6));
        jPanel4.add(txtRegConfirmMasterKey);
        txtRegConfirmMasterKey.setBounds(249, 194, 261, 37);

        btnClearAllFields.setBackground(new java.awt.Color(204, 255, 255));
        btnClearAllFields.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        btnClearAllFields.setForeground(new java.awt.Color(0, 153, 153));
        btnClearAllFields.setText("CLEAR ALL FIELDS");
        btnClearAllFields.setToolTipText("clear all the input fields");
        btnClearAllFields.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        btnClearAllFields.setBorderPainted(false);
        btnClearAllFields.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnClearAllFieldsMouseClicked(evt);
            }
        });
        btnClearAllFields.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearAllFieldsActionPerformed(evt);
            }
        });
        jPanel4.add(btnClearAllFields);
        btnClearAllFields.setBounds(170, 370, 180, 30);

        backGround4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        backGround4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MasterKey/background.png"))); // NOI18N
        backGround4.setText("backGround");
        backGround4.setMinimumSize(new java.awt.Dimension(539, 400));
        jPanel4.add(backGround4);
        backGround4.setBounds(0, 0, 540, 420);

        jTabbedPane1.addTab("REGISTER", jPanel4);

        jMenuBar1.setBackground(new java.awt.Color(204, 255, 255));
        jMenuBar1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jMenuBar1.setForeground(new java.awt.Color(204, 255, 255));

        jMenu1.setText("File");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });

        jMenuItem2.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        jMenuItem2.setText("Exit");
        jMenuItem2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuItem2MouseClicked(evt);
            }
        });
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Help");

        jMenuItem5.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        jMenuItem5.setText("Master Key");
        jMenuItem5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuItem5MouseClicked(evt);
            }
        });
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem5);

        jMenuItem1.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        jMenuItem1.setText("About");
        jMenuItem1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuItem1MouseClicked(evt);
            }
        });
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 539, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegisterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRegisterMouseClicked
        String username = txtRegUsername.getText();
        String masterKey = txtRegMasterKey.getText();
        String confirmMasterKey = txtRegConfirmMasterKey.getText();

        /*
            The below code will check the amount of users in the database. If there is three(3) or less users
            registered in the dataabse then a third user can be registered. However there cannot be more than
            three(3) users in the database. This is to limit the amount of users who have access to the entire system
         */
        int amountOfRegisteredAdmins = 0; //This variable will store the amount of users in the database
        try {
            stmnt = connect.createStatement();
            ResultSet allUsers = stmnt.executeQuery("SELECT Username FROM Login");
            while (allUsers.next()) {
                amountOfRegisteredAdmins++;
            }
        } catch (Exception error) {
            JOptionPane.showMessageDialog(null, "Unable to read all registered users\n" + error.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

        if (username.length() == 0) {   //check username field if it's empty or not
            JOptionPane.showMessageDialog(null, "Username field is empty", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (masterKey.length() >= 4) { //check length of master key
            if (masterKey.equals(confirmMasterKey)) { //Checks if master key is the same
                if (amountOfRegisteredAdmins != 3) {
                    JOptionPane.showMessageDialog(null, "Master keys match");
                    // if length is greater than four(4) and master keys are the same then details are written in the database
                    try {
                        stmnt = connect.createStatement();
                        String encryptedMasterKey = objEncryptDecrypt.getEncryption(masterKey);   //sends the masterkey to the 'getEncryption(masterKey)' method to be encrypted
                        ResultSet checkUsername = stmnt.executeQuery("SELECT Username FROM Login"); //read all usernames from Database
                        while (checkUsername.next()) {
                            if (!checkUsername.getString("Username").equals(username)) {
                                /*if the username does not exist, no padding will be done.
                                    User will be registered as per the details provided*/
                                System.out.println("username is unique");
                                String insertDetails = "INSERT INTO Login(Username, MasterKey, Old_MasterKey) VALUES(?, ?, ?)";
                                prepStmnt = connect.prepareStatement(insertDetails);
                                prepStmnt.setString(1, username);
                                prepStmnt.setString(2, encryptedMasterKey);
                                prepStmnt.setString(3, encryptedMasterKey);
                                prepStmnt.executeUpdate();
                                JOptionPane.showMessageDialog(null, "Successfully registered");
                                break;
                                //connect.close();
                            } else //Username will be padded as it exist already
                            {
                                if (checkUsername.getString("Username").equals(username)) { //checks if the username entered exist or not
                                    int padNumber = (int) (Math.random());   //random number that will be used to pad the already existing username
                                    JOptionPane.showMessageDialog(null, "Please note!!\nUsername will be padded by '" + padNumber + "' as it exists already.");
                                    String insertDetails = "INSERT INTO Login(Username, MasterKey, Old_MasterKey) VALUES(?, ?, ?)";
                                    prepStmnt = connect.prepareStatement(insertDetails);
                                    prepStmnt.setString(1, username + padNumber);
                                    prepStmnt.setString(2, encryptedMasterKey);
                                    prepStmnt.setString(3, encryptedMasterKey);
                                    prepStmnt.executeUpdate();
                                    JOptionPane.showMessageDialog(null, "Successfully registered");
                                    break;
                                    //connect.close();
                                }
                            }
                        }
                    } catch (HeadlessException | SQLException error) {
                        JOptionPane.showMessageDialog(null, "Unable to register provided details\n" + error.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "The database has reached the amount of administrator\nusers that can be registereds to use the system", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else { //if master keys are not the same, the below error message will be displayed
                JOptionPane.showMessageDialog(null, "Master keys are not the same", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {  //if length of master key is not greater or equal to four(4) characters, the below error message will be displayed
            JOptionPane.showMessageDialog(null, "Master key must be more than four(4) characters", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnRegisterMouseClicked

    private void btnClearAllFieldsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClearAllFieldsMouseClicked
        // TODO add your handling code here:
        txtRegUsername.setText("");
        txtRegMasterKey.setText("");
        txtRegConfirmMasterKey.setText("");
    }//GEN-LAST:event_btnClearAllFieldsMouseClicked

    private void btnClearAllFieldsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearAllFieldsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnClearAllFieldsActionPerformed

    private void btnLoginMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLoginMouseClicked
        String userName = txtUsername.getText();
        String masterKey = txtMasterKey.getText();

        boolean status = false;
        String user[] = new String[3]; //array that will store all the usernames from the database
        String mstrKey[] = new String[3];   //array that will store all the master keys from the database
        int i = 0;
        try {
            stmnt = connect.createStatement();
            ResultSet loginDetails = stmnt.executeQuery("SELECT Username, MasterKey FROM Login"); //Select username and masterkey from database
            while (loginDetails.next()) {
                String encryptedMasterKey = loginDetails.getString("MasterKey");    //reads encrpted master key from the Database
                String decryptedMasterKey = objEncryptDecrypt.getDecryption(encryptedMasterKey); //returns a decrypted master key from getDecryption method
                user[i] = loginDetails.getString("Username");
                mstrKey[i] = decryptedMasterKey;
                i += 1;
            }

            int a = 0;
            do {
                //The below code will check if the username and password entered match with login details in the database
                if ((user[a].equalsIgnoreCase(userName)) && (mstrKey[a].equalsIgnoreCase(masterKey))) {
                    status = true;
                    break;
                } else {
                    status = false;
                }
                a++;
            } while (a < 3);
        } catch (SQLException error) {
            JOptionPane.showMessageDialog(null, "Unable to login with the provided details\n" + error.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

        //check if the entered details are correct or not
        if (status) {
            JOptionPane.showMessageDialog(null, "Logged in successfully");
            this.dispose(); //close the Login window
            new MasterKeyWindow().setVisible(true); //opens the MasterKey windows
        } else {
            JOptionPane.showMessageDialog(null, "Either Username or MasterKey is incorrect", "Incorrect details", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnLoginMouseClicked

    private void btnClearAllFields1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClearAllFields1MouseClicked
        // TODO add your handling code here:
        txtUsername.setText("");
        txtMasterKey.setText("");
    }//GEN-LAST:event_btnClearAllFields1MouseClicked

    private void btnClearAllFields1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearAllFields1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnClearAllFields1ActionPerformed

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu1MouseClicked

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem2MouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jMenuItem2MouseClicked

    private void jMenuItem5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem5MouseClicked
        // Display specific information about the entire program

    }//GEN-LAST:event_jMenuItem5MouseClicked

    private void jMenuItem1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem1MouseClicked
        // TODO add your handling code here:
        /*JOptionPane.showMessageDialog(null,"Programmer, Banele Mlamleli\n\nMaster Key is a small program that stores crucial"+
            " data in a secured Database. This program uses a specific Ciphertonium algorith to encrypt and decrypt data","About",
            JOptionPane.INFORMATION_MESSAGE);*/
    }//GEN-LAST:event_jMenuItem1MouseClicked

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // The below code will display the 'About' information of the entire program
        JOptionPane.showMessageDialog(null, "Programmer, Banele Mlamleli\n\nMaster Key is a small program that\nstores crucial "
                + "data in a secured Database.\nThis program uses a specific Ciphertonium\nalgorithm to encrypt and decrypt data.", "About",
                JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // Display specific information about the entire program
        JOptionPane.showMessageDialog(null, "Product Version: 1.0 (Build 20172502)\n"
                + "Program Name: Master Key — Alpha\n"
                + "Java: 1.8.0_91; Java HotSpot(TM) Client VM 25.91-b14\n"
                + "Runtime: Java(TM) SE Runtime Environment 1.8.0_91-b14\n"
                + "System used: Windows 8 version 6.2 running on x86; Cp1252; en_ZA (nb)\n", "Master Key — Alpha", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jMenuItem5ActionPerformed
    /*
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel backGround1;
    private javax.swing.JLabel backGround4;
    private javax.swing.JButton btnClearAllFields;
    private javax.swing.JButton btnClearAllFields1;
    private javax.swing.JLabel btnLogin;
    private javax.swing.JLabel btnRegister;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel logo;
    private javax.swing.JPasswordField txtMasterKey;
    private javax.swing.JPasswordField txtRegConfirmMasterKey;
    private javax.swing.JPasswordField txtRegMasterKey;
    private javax.swing.JTextField txtRegUsername;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
